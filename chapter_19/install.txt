// Node modules are normally not sent to the repo because it is large
// To restore them you run 'npm install' which uses the package.json file to restore all dependencies


///////////////////////////
//// INSTALL BABEL  ///////
///////////////////////////


npm init
npm install @babel/core @babel/cli --save-dev
npm install @babel/preset-env --save-dev

/////////////////////////////////
/////create .babelrc file////////
////insert into .babelrc file////
/////////////////////////////////

{
    "presets": ["@babel/preset-env"]
}

/////////////////////////////
///// Convert by running ////
/////////////////////////////

node_modules/.bin/babel before.js -o after.js
node_modules/.bin/babel src/index.js -w -o dist/assets/bundle.js 

/// Copy and fix the terminal command into scripts of package.json. I give it a name of babel
  "scripts": {
    "babel": "node_modules/.bin/babel src/index.js -o dist/assets/bundle.js"
  }

///////////////////// run with command ///////////////
npm run babel



/////////////////////////////
//// INSTALL WEBPACK  ///////
/////////////////////////////

npm install webpack webpack-cli --save-dev

node_modules/.bin/webpack

/// Copy and fix the terminal command into scripts of package.json. I give it a name of build
  "scripts": {
    "build": "node_modules/.bin/webpack --mode production"
  }

///////////////////// run with command ///////////////
npm run webpack



/////////////////////////////////////////
//// INSTALL WEBPACK DEV SERVER  ///////
////////////////////////////////////////


//// Run this in the terminal

npm install webpack-dev-server

/// Add this to the file webpack.config.js

    devServer : {
        contentBase: path.resolve(__dirname, 'dist'),
        publicPath: '/assets/'
    }

/// Copy and fix the terminal command into scripts of package.json. I give it a name of serve
  "scripts": {
    "serve": "webpack-dev-server --mode development"
  }

///////////////////// run with command ///////////////
npm run serve



//////////////////////////////////
//// INSTALL BABEL LOADER  ///////
//////////////////////////////////

npm install babel-loader --save-dev